name: TransChile CI/CD Pipeline v2

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '22.14.0'
  DOCKER_REGISTRY: 'transchile-registry'

jobs:
  # Fase 1: Compilación y Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Instalar dependencias
        run: npm install
        
      - name: Build aplicación
        run: npm run build
        
      - name: Guardar artefactos
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  # Fase 2: Pruebas Automatizadas
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        test-type: [unit, integration, security]
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: Ejecutar pruebas unitarias
        if: matrix.test-type == 'unit'
        run: npm run test:unit -- --coverage
        
      - name: Ejecutar pruebas de integración
        if: matrix.test-type == 'integration'
        run: npm run test:integration
        
      - name: Auditoría de seguridad
        if: matrix.test-type == 'security'
        run: npm audit --audit-level=high

  # Fase 3: Análisis de Calidad
  quality:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: SonarCloud Scan 2
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Fase 4: Despliegue
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test, quality]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Descargar artefactos
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
          
      - name: Deploy a producción
        run: |
          echo "Desplegando a producción..."
          # Scripts de despliegue específicos de TransChile
